date;title;link;description
 03.04.2024 ;Автопилот для X-Plane используя Python;https://austinsnerdythings.com/2021/10/15/creating-an-autopilot-in-x-plane-using-python-part-1/;['', 'X-Plane is a flight simulator, and Austin is using Python to create an autopilot using proportional integral derivative controllers.', '']
 03.04.2024 ;Designing a Pure Python Web Framework;https://reflex.dev/blog/2024-03-21-reflex-architecture/;['', 'This blog post talks about Reflex, a Python web framework. The post talks about what makes Reflex different from other frameworks and shows you sample starting code.', '']
 02.04.2024 ;Модули multiprocessing и threading в Python;https://habr.com/ru/articles/804799/;['', 'Данная статья написана новичком для новичков, т.е. для тех, кто только начинает изучать возможности многопроцессорного и многопоточного программирования в Python. Статья намеренно пишется без воды и со скомканной теорией, в стиле шпаргалки.', '']
 04.04.2024 ;Django - 5.0.4;https://pypi.org/project/django/5.0.4/;['Мощный web-фреймворк. Скачать можно по ссылке: https://pypi.python.org/pypi/Django/']
 03.04.2024 ;lxml - 5.2.1;https://pypi.org/project/lxml/5.2.1/;['Мощный и быстрый модуль для обработки XML/HTML. Скачать можно по ссылке: https://pypi.python.org/pypi/lxml/']
 02.04.2024 ;Werkzeug - 3.0.2;https://pypi.org/project/werkzeug/3.0.2/;['Швейцарский армейский нож веб-разработки Python. Скачать можно по ссылке: https://pypi.python.org/pypi/Werkzeug/']
 31.03.2024 ;Мега-Учебник Flask Глава 1: Привет, мир! (издание 2024);https://habr.com/ru/articles/804245/;['', 'Вы собираетесь отправиться в путешествие, чтобы научиться создавать веб-приложения с помощью\xa0Python\xa0и фреймворка\xa0Flask.\xa0В этой первой главе вы узнаете, как настроить проект Flask.\xa0К концу этой главы на вашем компьютере будет запущено простое веб-приложение Flask!', '']
 31.03.2024 ;Автоматизируем поиск ценной информации в групповых чатах Telegram с помощью LLM;https://habr.com/ru/articles/804111/;['', 'Устали мониторить бесконечные групповые чаты в Telegram в поисках важной информации? Решение есть! Пишем компактное приложение на Python, которое будет делать это за нас с использованием LLM.', '']
 28.03.2024 ;Логистическая и Softmax-регрессии. Теоретические основы и реализация с нуля на Python;https://habr.com/ru/articles/803397/;['', 'Начнём с более простого. Логистическая регрессия — линейный бинарный классификатор, основанный на применении сигмоидальной функции к линейной комбинации признаков, результатом которого является вероятность принадлежности к определённому классу. Обычно порог устанавливается 0.5: если вероятность меньше порога — класс относится к 0, а если больше — к 1. В принципе, условия определения логистической регрессии такие же как и у линейной за исключением бинаризации таргета.', '']
 28.03.2024 ;Как работает multiprocessing в Python под капотом;https://habr.com/ru/articles/803607/;['', 'Я довольно давно пишу на Python и во многих проектах использовал multiprocessing — пакет стандартной библиотеки языка Python, который предоставляет интерфейс для работы с процессами, очередями, пулами процессов и многими другими удобными инструментами для параллельного программирования. В какой-то момент я понял, что мне не хватает более детального понимания работы этой библиотеки.Мне захотелось залезть в исходники multiprocessing, разобраться и заодно написать статью. Данная статья в основном рассчитана на новичков в Python и тех, кто хочет подробнее разобраться в том, как именно создаются процессы и пулы в Python и погрузиться в детали реализации.', '']
 28.03.2024 ;А побыстрее можно?;https://www.youtube.com/watch?v=sX7nub8g3GA;['', 'Сколько существует python, столько все жалуются, что он медленный. Дошло до того, что даже автор языка признал, что так жить больше нельзя, и запустил проект по ускорению CPython. Но что именно можно (нужно?) ускорить в python? Какие изменения реализуются уже сейчас прямо на наших глазах? Нам предстоит погрузиться в некоторые аспекты работы интерпретатора, чтобы на примере одного из свежих изменений воочию увидеть, как же все-таки разгоняют python.', '']
 28.03.2024 ;Утечки памяти и дедлоки: как выстрелить себе в ногу;https://www.youtube.com/watch?v=awoyyQTsp1U;['', 'Есть устоявшееся выражение про «выстрелить себе в ногу», его интерпретация для языка Python гласит следующее: «Вы пытаетесь выстрелить себе в ногу, но то и дело попадаете промеж пальцев. А всё потому, что Питон настолько гибкий — что из пальцев выскальзывает». Оказывается, попасть в ногу намного проще. Минорным обновлением Python вполне реально дедлокнуть себе интерпретатор, а запуск подпроцесса с пользовательским кодом превращается в дебаг утечки памяти. В таких случаях поиск root cause проблемы чаще всего оказывается сильно сложнее, чем хотфикс. И без понимания что же все-таки произошло, можно наступать на те же грабли снова и снова. Посмотрим на пару таких случаев со стороны стандартной библиотеки: как диагностировали и что полезного из этого вынесли. Заодно разберем, чем плох системный вызов fork, и как им можно сделать себе очень больно. Послушать будет интересно всем сочувствующим, особенно тем, кто использует библиотеки subprocess, multiprocessing и concurrent.futures.', '']
 28.03.2024 ;Легковесный ЧПУ с EtherCAT на python и С;https://www.youtube.com/watch?v=cD2mIMarO9Q;['', 'Эта история о том, как python разработчик и инженер-электронщик совместными усилиями сделали прототип промышленного ЧПУ. Мы использовали Python, Cython и язык С, чтобы разработать гибкую систему, способную управлять различными аппаратными конфигурациями для решения производственных задач. В рамках доклада мы рассмотрим следующие темы: Архитектура приложения ЧПУ: выбор дизайна, обеспечивающего гибкость и адаптивность системы Расчет точной траектории движения Интеграция аппаратного и программного обеспечения Достижение короткого цикла синхронизации для нескольких приводов (двигателей) Приглашаем вас принять участие в докладе, где мы поделимся опытом создания легковесного ЧПУ с поддержкой EtherCAT на Python и C.', '']
 28.03.2024 ;Как использовать serverless и не наломать дров;https://www.youtube.com/watch?v=cSZrWpyNlfI;['', 'В этом докладе я расскажу о неожиданностях использования serverless по сравнению с server подходом. Зачем и почему serverless нужен Как делать версионирование, canary deployment, релизы в AWS Lambda и другие вещи для production ready бэкенд разработки Об особенностях python разработки под лямбды, о бесполезности асинхронности, сложности дебага ошибок, о поражающей скорости деплоймента кода в продакшен Как потратить сотни долларов на метрики и логи, которые никто не читает О том, как не сломать базу, если в нее ходят сразу 2–3 тысячи экземпляров лямбд', '']
 31.03.2024 ;IPython - 8.23.0;https://pypi.org/project/ipython/8.23.0/;['Интерактивная оболочка для языка программирования Python. Скачать можно по ссылке: https://pypi.python.org/pypi/IPython']
 31.03.2024 ;lxml - 5.2.0;https://pypi.org/project/lxml/5.2.0/;['Мощный и быстрый модуль для обработки XML/HTML. Скачать можно по ссылке: https://pypi.python.org/pypi/lxml/']
 28.03.2024 ;Функциональщина в Python — это плохая идея?;https://www.youtube.com/watch?v=OHbkCb38pwk;['', 'Функциональное программирование — не самый популярный подход к написанию кода на Python. Но у ФП в Python есть активные сторонники. Они широко применяют и продвигают модули вроде functools, itertools из стандартной библиотеки и пакеты вроде toolz, funcy, returns и др. Мы рассмотрим, как идеи элегантного ФП кода и красивых математических абстракций сталкиваются с реальностью интерпретатора CPython и культуры pythonic кода. Доклад будет полезен программистам на Python, интересующимся функциональным программированием (уже применяющим его или заинтересованным в применении) и желающим обсудить, насколько ФП нужно и полезно им в Python. Предполагается знание основных концепций ФП (чистые функции, побочные эффекты, функции высшего порядка).', '']
 28.03.2024 ;Mojo — революция или хайп?;https://www.youtube.com/watch?v=kzNwVdA3t_s;['', 'В мае разработчики движка Modular опубликовали публичную версию языка Mojo. Код на Mojo выглядит один-в-один, как код на питоне, и это не случайно. Mojo — это одновременно под- и надмножество питона, позволяющее выжимать адскую производительность в требовательных к CPU задачах — например, в задачах ML и AI. Подробностей пока мало: запустить Mojo локально нельзя, можно лишь воспользоваться специальной версией Jupyter Notebook, доступ к которой выдаётся через лист ожидания. Из материалов про Mojo пока доступны в основном только красивые презентации его авторов (показывающие, например, ускорение относительно CPython в тысячи раз на задаче умножения двух матриц). Я получил доступ к превью Mojo и немного в нём поковырялся. Так что теперь давайте вместе во время доклада попробуем разобраться, есть ли у этой разработки шансы на революцию, или это просто попытка выехать на хайпе вокруг AI?', '']
 28.03.2024 ;Почему мы написали еще один фреймворк для Python;https://www.youtube.com/watch?v=C92Yq9ibW94;['']
 29.03.2024 ;lxml - 5.1.1;https://pypi.org/project/lxml/5.1.1/;['Мощный и быстрый модуль для обработки XML/HTML. Скачать можно по ссылке: https://pypi.python.org/pypi/lxml/']
 28.03.2024 ;Это мы юзаем: библиотека Optuna в Python для оптимизации гиперпараметров;https://habr.com/ru/companies/otus/articles/801463/;['', 'Гиперпараметры — это параметры, которые не учатся в процессе обучения модели. Они задаются заранее. От выбора гиперпараметров напрямую зависит качество и эффективность модели, а их оптимизация может улучшить результаты предсказаний.', '']
 29.03.2024 ;lxml - 5.0.2;https://pypi.org/project/lxml/5.0.2/;['Мощный и быстрый модуль для обработки XML/HTML. Скачать можно по ссылке: https://pypi.python.org/pypi/lxml/']
 28.03.2024 ;Reading and Writing WAV Files in Python;https://realpython.com/python-wav-files/;['']
 27.03.2024 ;Python Bytes: #376 Every dunder method in a Python Lockbox;https://pythonbytes.fm/episodes/show/376/every-dunder-method-in-a-python-lockbox;['', 'Очередной выпуск англоязычного подкаста Python Bytes', '']
 28.03.2024 ;pymongo - 4.6.3;https://pypi.org/project/pymongo/4.6.3/;['Python интерфейс для MongoDB. Скачать можно по ссылке: https://pypi.python.org/pypi/pymongo/']
 28.03.2024 ;django-tinymce - 4.0.0;https://pypi.org/project/django-tinymce/4.0.0/;['Интеграция редактора TinyMCE в админ панель Django. Скачать можно по ссылке: https://pypi.python.org/pypi/django-tinymce/']
 28.03.2024 ;selenium - 4.19.0;https://pypi.org/project/selenium/4.19.0/;['Модуль для автоматизации тестирования web-приложений. Скачать можно по ссылке: https://pypi.python.org/pypi/selenium/']
 27.03.2024 ;django-filter - 24.2;https://pypi.org/project/django-filter/24.2/;['Django-приложение для гибкой фильтрации объектов модели (querysets). Скачать можно по ссылке: https://pypi.python.org/pypi/django-filter/']
 27.03.2024 ;kombu - 5.3.6;https://pypi.org/project/kombu/5.3.6/;['Фреймворк для работы с AMQP. Скачать можно по ссылке: https://pypi.python.org/pypi/kombu/']
 25.03.2024 ;Линейный дискриминантный анализ (LDA). Принцип работы и реализация с нуля на Python;https://habr.com/ru/articles/802511/;['', 'Линейный дискриминантный анализ (Linear Discriminant Analysis или LDA) — алгоритм классификации и понижения размерности, позволяющий производить разделение классов наилучшим образом.', '']
 25.03.2024 ;Сводка от pythonz net 17.03.2024 — 24.03.2024;https://pythonz.net/articles/531/;['', 'А теперь о том, что происходило в последнее время на других ресурсах.', '']
 23.03.2024 ;Python Bytes: #375 Pointing at Countries;https://pythonbytes.fm/episodes/show/375/pointing-at-countries;['', 'Очередной выпуск англоязычного подкаста Python Bytes', '']
 24.03.2024 ;SQLAlchemy - 2.0.29;https://pypi.org/project/sqlalchemy/2.0.29/;['Библиотека работы с базами данных. Скачать можно по ссылке: https://pypi.python.org/pypi/SQLAlchemy/']
 23.03.2024 ;Talk Python to Me: #454: Data Pipelines with Dagster;https://talkpython.fm/episodes/show/454/data-pipelines-with-dagster;['', 'Audio', '']
 23.03.2024 ;Пишем асинхронный парсер и скрапер картинок на Python с графическим интерфейсом;https://habr.com/ru/articles/801981/;['', 'В этой статье мы создадим desktop-приложение, которое по нашему запросу будет сохранять на нашем диске заданное количество картинок. Так как картинок будет много, мы воспользуемся асинхронностью Python для конкурентной реализации операций ввода-вывода. Посмотрим, чем отличаются библиотеки requests и aiohttp. Также создадим два дополнительных потока приложения, чтобы обойти глобальную блокировку интерпретатора Python.', '']
 23.03.2024 ;Контроллер управления по типу Аккерманна на базе 4-колёсной мобильной платформы (ROS Noetic);https://habr.com/ru/articles/802069/;['', 'В данной работе рассматривает пример создания симуляционной модели четырёхколёсной мобильной платформы с рулевым управления по типу Аккреманна, с использованием фреймворка ROS, контроллер написан на языке Python.', '']
 23.03.2024 ;Метод опорных векторов (SVM). Подходы, принцип работы и реализация с нуля на Python;https://habr.com/ru/articles/802185/;['', 'Метод опорных векторов (Support Vector Machine или просто SVM) — мощный и универсальный набор алгоритмов для работы с данными любой формы, применяемый не только для задач классификации и регрессии, но и также для выявления аномалий. В данной статье будут рассмотрены основные подходы к созданию SVM, принцип работы, а также реализации с нуля его наиболее популярных разновидностей.', '']
 23.03.2024 ;Django REST framework - 3.15;https://www.django-rest-framework.org/community/release-notes/;['', 'The first major release since September 2022 is here! Now with Django 5.0 and Python 3.12 support as well as a long list of new features.', '']
 21.03.2024 ;hyperdiv - Build Reactive Web UIs in Python;https://github.com/hyperdiv/hyperdiv;['']
 21.03.2024 ;mountaineer - Web Framework for Python and React;https://github.com/piercefreeman/mountaineer;['']
